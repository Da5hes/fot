version: "3.4"

services:
  redis:
    image: redis:3
    hostname: redis

#  # PostgreSQL database
#  db:
#    image: pg10init
#    hostname: db
#    environment:
#      - PGDATA=/var/lib/postgresql/data/pgdata
#    ports:
#       - "5432:5432"
#    volumes:
#      - pgdata:/var/lib/postgresql/data/pgdata
#      - pgbackup:/pg_backups

#  rabbit:
#    image: rabbitmq:3-management
#    hostname: rabbit
#    environment:
#      - RABBITMQ_DEFAULT_PASS=mypassword
#      - RABBITMQ_DEFAULT_USER=myuser
#    ports:
#      - "5672:5672"   # forward this port for debugging
#      - "15672:15672" # here can access rabbitmq management plugin

#  django:
#    image: djangoenvimg
#    command: ./run_django.sh
#    environment:
#      - DJANGO_ENV=prod
#      - DOCKER_CONTAINER=1
#    volumes:
#      # mount current directory inside container, to avoid the need of re-building the image every time django updates.
#      - .:/app
#      - /home/lyk/tdy/Android/Sdk:/Sdk
#    ports:
#      - "8000:8000"
#    # instruct all 5 instances of djangoserver containers to share port 8000 via a load-balanced network
#    # called backend
#    depends_on:
#      - db
#      - rabbit

#  # Celery worker
#  worker:
#    image: djangoenvimg
#    command: ./run_celery.sh
#    environment:
#      - DJANGO_ENV=prod
#      - DOCKER_CONTAINER=1
#    volumes:
#      - .:/app
#      - /home/lyk/tdy/Android/Sdk:/Sdk
#    depends_on:
#      - rabbit
#      - redis
#      - db

# Creates the volume for postgresql database to preserve data during multiple container sessions
volumes:
#  pgdata:
#  pgbackup:
